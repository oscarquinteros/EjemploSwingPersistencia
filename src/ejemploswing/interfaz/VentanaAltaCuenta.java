package ejemploswing.interfaz;import ejemploswing.Cuenta;import ejemploswing.GestorCuentas;import ejemploswing.excepciones.DataAccessException;import java.awt.*;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.text.DecimalFormat;import java.text.DecimalFormatSymbols;import javax.swing.*;public class VentanaAltaCuenta extends JInternalFrame{    private JTextField nombre=new JTextField(12);    private JTextField numero=new JTextField(12);    private JFormattedTextField saldo;    private JButton aceptar = new JButton("Aceptar");;    private JButton salir = new JButton("Salir");;    public VentanaAltaCuenta() {        super("Alta de Cuenta",                true, //resizable                true, //closable                true, //maximizable                true);//iconifiable        setSize(700,140)   ;  // (x,y)        setLocation(120,120);  //(x,y)        pantalla();    }        public void pantalla() {        JPanel textos= new JPanel(new GridLayout(3,1));        JPanel campos= new JPanel(new GridLayout(3,1));        JPanel botonera = new JPanel(new FlowLayout(FlowLayout.CENTER));                getContentPane().add(textos,BorderLayout.WEST);        getContentPane().add(campos,BorderLayout.CENTER);        getContentPane().add(botonera,BorderLayout.SOUTH);                JLabel jLNumero = new JLabel("Numero: ",JLabel.RIGHT);        textos.add(jLNumero);        JLabel jLNombre  = new JLabel ("Nombre: ",JLabel.RIGHT);        textos.add(jLNombre);        JLabel jLSaldo  = new JLabel ("Saldo: ",JLabel.RIGHT);        textos.add(jLSaldo);                DecimalFormatSymbols custom=new DecimalFormatSymbols();        custom.setDecimalSeparator('.');        DecimalFormat format=(DecimalFormat)DecimalFormat.getInstance();        format.setGroupingUsed(false);        format.setDecimalFormatSymbols(custom);        saldo=new JFormattedTextField(format);                campos.add(numero);        campos.add(nombre);        campos.add(saldo);        aceptar.addActionListener(new ManejadorEventos());        botonera.add(aceptar);                salir.addActionListener(new ManejadorEventos());        botonera.add(salir);    }    public void altaCuenta() {        try {            GestorCuentas gestor = new GestorCuentas();            gestor.agregarCuenta(new Cuenta(numero.getText(),nombre.getText(),new Float(saldo.getText())));        } catch (DataAccessException ex) {            JOptionPane.showMessageDialog(null, ex.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);                    }            }    class ManejadorEventos implements ActionListener {        public void actionPerformed(ActionEvent e) {            if (e.getSource() == aceptar) {                altaCuenta();            }            if (e.getSource() == salir) {                dispose();                setVisible(false);            }        }    }}